<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smart.sso.demo.dao.photo.PhotoInfoDao">
    <insert id="createNewImage" parameterType="com.smart.sso.demo.entity.photo.PhotoInfo">
        insert into photo_info values(null, #{photoName}, #{uri}, #{topicId}, #{classifyId}, #{createTime}, #{temperature},#{width},#{height})
    </insert>

    <select id="getPhotoInfoOnNumber" resultType="com.smart.sso.demo.entity.photo.PhotoInfo">
        select * from photo_info order by photo_id DESC limit #{number}
    </select>


    <!-- limit优化， CDATA用来转义 > 因为xml中不允许存在<,>这样的字符-->
    <select id="getPhotoOnOffset" parameterType="int" resultType="com.smart.sso.demo.entity.photo.PhotoInfo">
        select * from photo_info where <![CDATA[ photo_id < #{photoId} order by photo_id DESC limit #{number}]]>
    </select>
    <!--  以后可以优化成尽量走覆盖索引  -->
    <select id="FindPhotoInfoByFuzzSearch" resultType="com.smart.sso.demo.entity.photo.PhotoInfo">
        select * from photo_info where photo_name like concat(#{name}, '%') order by photo_id DESC
    </select>
    <select id="FindPhotoInfoByName" resultType="com.smart.sso.demo.entity.photo.PhotoInfo">
        select * from photo_info where photo_name = #{name}
    </select>

    <select id="findPhotoByCatalogue" parameterType="int" resultType="com.smart.sso.demo.entity.photo.PhotoInfo">
        select * from photo_info where classifyId = #{classifyId} limt #{n}
    </select>
</mapper>